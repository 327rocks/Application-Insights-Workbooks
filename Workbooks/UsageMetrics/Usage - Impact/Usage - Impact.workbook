{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "8e5b3d6e-f2a7-4d5f-99e7-8d51e31d842e",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "During",
            "type": 4,
            "description": "Choose the time range for this report.",
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "24f98f96-2d26-4567-b8c1-9eca1b0121c5",
            "version": "KqlParameterItem/1.0",
            "name": "WhoUsed",
            "label": "For who used",
            "type": 2,
            "description": "Use the value of the selected metric on this event.",
            "isRequired": true,
            "query": "let table_customEvents = customEvents\r\n| where timestamp {TimeRange}\r\n| summarize total = count() by itemType, name \r\n| extend label = strcat(\"í ½í¿¦ \", name)\r\n| top 500 by total desc;\r\nlet table_pageViews = pageViews\r\n| where timestamp {TimeRange}\r\n| summarize total = count() by itemType, name \r\n| extend label = strcat(\"í ½í¿¨ \", name)\r\n| top 500 by total desc;\r\nlet table_requests = requests\r\n| where timestamp {TimeRange}\r\n| summarize total = count() by itemType, name \r\n| extend label = strcat(\"í ½í¿¥ \", name)\r\n| top 500 by total desc; \r\nunion table_customEvents,table_pageViews,table_requests\r\n| project value=name, label, group = itemType\r\n",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "809c2750-18d5-47e3-b41a-f6cdb7ef561a",
            "version": "KqlParameterItem/1.0",
            "name": "BucketItem",
            "label": "analyze how its",
            "type": 2,
            "description": "Select the metric used to bucketize data.",
            "isRequired": true,
            "query": "let getTableSchema = (table: (*), tableName: string) { \r\n\t  table\r\n      | project  column_ifexists(\"customDimensions\",'')\r\n      | evaluate bag_unpack(column_ifexists(\"customDimensions\",''))\r\n      | getschema \r\n      | project label=ColumnName, ColumnType, TableName=tableName};\r\nlet t1 = getTableSchema(pageViews, 'pageViews');\r\nlet t2 = getTableSchema(customEvents, 'customEvents');\r\nlet t3 = getTableSchema(requests, 'requests');\r\nlet durationTable = datatable(value:string, label:string, group: string, selected: string)[\r\n\t'duration', 'Duration', 'Metrics', ''\r\n    ];\r\nlet customDimension =  union t1, t2, t3\r\n    | where ColumnType == 'string'\r\n    | summarize count() by label\r\n    | project value = strcat(\"customDimensions[\\\"\", label,\"\\\"]\"), label, group='Custom Properties', selected=''\r\n    | order by label asc;    \r\nlet validDimensionList = datatable(value:string, label:string)[\r\n\t'application_Version', 'Application version',\r\n\t'user_AuthenticatedId', 'Authenticated or anonymous traffic',\r\n\t'client_Browser', 'Browser version', \r\n\t'client_City', 'City',\r\n    'client_CountryOrRegion', 'Country or region', \r\n\t'cloud_RoleInstance', 'Cloud role instance', \r\n\t'cloud_RoleName', 'Cloud role name',\r\n\t'client_Model', 'Device model', \r\n    'client_OS', 'Operating system',\r\n\t'client_Type', 'Device type',\r\n\t'isSynthetic', 'Is real user traffic',\r\n    'name', 'Name', \r\n\t'operation_Name', 'Operation name',\r\n\t'performanceBucket', 'Performance',\r\n    'resultCode', 'Result code',\r\n    'responseCode', 'Response code',\r\n\t'tostring(parseurl(url)[\"Host\"])', 'URL host', \r\n\t'tostring(parseurl(url)[\"Path\"])', 'URL path',\r\n\t'operation_SyntheticSource', 'Source of synthetic traffic',\r\n\t'client_CountryOrRegion', 'State or province', \r\n\t'success', 'Successful request',\r\n    'type','Telemetry type'\r\n\t] | order by label asc;\r\nlet dimensionList = union pageViews, customEvents, requests\r\n    | where timestamp {TimeRange}\r\n    | getschema \r\n    | where ColumnType == \"string\"\r\n    | summarize count() by value = ColumnName\r\n    | join kind = inner validDimensionList on value\r\n    | project value, label, group = \"Standard Properties\", selected = ''\r\n    | order by label asc;\r\nunion durationTable, dimensionList, customDimension \r\n    | project value, label, group, selected\r\n    | where iff('{WhoUsed:label}' contains 'í ½í¿¦', group != 'Metrics', 1==1)\r\n\r\n",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "593233a9-14c2-464b-98fe-63c8e1419ae9",
            "version": "KqlParameterItem/1.0",
            "name": "ImpactItem",
            "label": "impacts the usage of ",
            "type": 2,
            "description": "Conversion will be calculated based on how many times this event happened after the impacting event.",
            "isRequired": true,
            "query": "let table_customEvents = customEvents\r\n| where timestamp {TimeRange}\r\n| summarize total = count() by itemType, name \r\n| extend label = strcat(\"í ½í¿¦ \", name)\r\n| top 500 by total desc;\r\nlet table_pageViews = pageViews\r\n| where timestamp {TimeRange}\r\n| summarize total = count() by itemType, name \r\n| extend label = strcat(\"í ½í¿¨ \", name)\r\n| top 500 by total desc;\r\nunion table_customEvents,table_pageViews\r\n| project value=name, label, group = itemType\r\n\r\n",
            "value": "Ajax query",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "1123006c-b3e0-4404-a47f-657ac07936f3",
            "version": "KqlParameterItem/1.0",
            "name": "Bucketize",
            "label": "Bucketize by",
            "type": 2,
            "description": "Determines how to bucketize the events.",
            "isRequired": true,
            "query": "datatable(value:string, text:string, selected: string)[\r\n'0.5', 'Half seconds', '',\r\n'0.25', 'Quarters of a second', '',\r\n'1', 'Seconds', '',\r\n'10', 'Deciles', '',\r\n'25', 'Quartiles', '',\r\n'5', 'Ventiles', 'true'\r\n]",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "above",
        "queryType": 0
      },
      "name": "parameters - common"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5632ed58-6194-40d9-a714-73c23cdba54d",
            "version": "KqlParameterItem/1.0",
            "name": "CustomFilters1",
            "label": "Add filters for who used",
            "type": 9,
            "description": "Add filters. Example: client_City == \"Seattle\" ",
            "multiSelect": true,
            "quote": "",
            "delimiter": " and ",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "802c11a0-9087-4a7b-a8be-747761d7ece5",
            "version": "KqlParameterItem/1.0",
            "name": "whoUsedFilters",
            "label": "",
            "type": 1,
            "value": null,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (CustomFilters1 is empty ), result = CustomFilters1",
                "criteriaContext": {
                  "leftOperand": "CustomFilters1",
                  "operator": "is Empty",
                  "rightValType": "static",
                  "resultValType": "param",
                  "resultVal": "CustomFilters1"
                }
              },
              {
                "condition": "else result = '| where {CustomFilters1}'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where {CustomFilters1}"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "e26ccd9d-7c7e-44a3-963d-202d5e8ab71c",
            "version": "KqlParameterItem/1.0",
            "name": "CustomFilters2",
            "label": "Add filters for impacts ",
            "type": 9,
            "description": "Add filters. Example: client_Browser contains \"Edge\" ",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "65b92b9a-6983-483f-8bb1-cc97bf93aee2",
            "version": "KqlParameterItem/1.0",
            "name": "impactFilters",
            "type": 1,
            "value": null,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (CustomFilters2 is empty ), result = CustomFilters2",
                "criteriaContext": {
                  "leftOperand": "CustomFilters2",
                  "operator": "is Empty",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "CustomFilters2"
                }
              },
              {
                "condition": "else result = '| where {CustomFilters2}'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where {CustomFilters2}"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "pills",
        "queryType": 0
      },
      "name": "parameters - filters"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "db57ed02-320a-4427-81cc-d96b08ddc32d",
            "version": "KqlParameterItem/1.0",
            "name": "bucketQuery",
            "type": 1,
            "value": "| summarize percentiles(average, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100) | extend list = parse_json(strcat(\"[\", percentile_average_5,\",\",percentile_average_10,\",\",percentile_average_15,\",\",percentile_average_20,\",\",percentile_average_25,\",\",percentile_average_30,\",\",percentile_average_35,\",\",percentile_average_40,\",\",percentile_average_45,\",\",percentile_average_50,\",\",percentile_average_55,\",\",percentile_average_60,\",\",percentile_average_65,\",\",percentile_average_70,\",\",percentile_average_75,\",\",percentile_average_80,\",\",percentile_average_85,\",\",percentile_average_90,\",\",percentile_average_95,\",\",percentile_average_100, \"]\"))",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Bucketize == '0.5'), result = '| extend list = parse_json(strcat(\"[\", 500,\",\",1000,\",\",1500,\",\",2000,\",\",2500,\",\",3000,\",\",3500,\",\",4000,\",\",4500,\",\",5000, \"]\"))'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0.5",
                  "resultValType": "static",
                  "resultVal": "| extend list = parse_json(strcat(\"[\", 500,\",\",1000,\",\",1500,\",\",2000,\",\",2500,\",\",3000,\",\",3500,\",\",4000,\",\",4500,\",\",5000, \"]\"))"
                }
              },
              {
                "condition": "if (Bucketize == '10'), result = '| summarize percentiles(average, 10,20,30,40,50,60,70,80,90,100) | extend list = parse_json(strcat(\"[\", percentile_average_10,\",\",percentile_average_20,\",\",percentile_average_30,\",\",percentile_average_40,\",\",percentile_average_50,\",\",percentile_average_60,\",\",percentile_average_70,\",\",percentile_average_80,\",\",percentile_average_90,\",\",percentile_average_100, \"]\"))'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "10",
                  "resultValType": "static",
                  "resultVal": "| summarize percentiles(average, 10,20,30,40,50,60,70,80,90,100) | extend list = parse_json(strcat(\"[\", percentile_average_10,\",\",percentile_average_20,\",\",percentile_average_30,\",\",percentile_average_40,\",\",percentile_average_50,\",\",percentile_average_60,\",\",percentile_average_70,\",\",percentile_average_80,\",\",percentile_average_90,\",\",percentile_average_100, \"]\"))"
                }
              },
              {
                "condition": "if (Bucketize == '25'), result = '| summarize percentiles(average, 25,50,75,100) | extend list = parse_json(strcat(\"[\", percentile_average_25,\",\",percentile_average_50,\",\",percentile_average_75,\",\",percentile_average_100, \"]\"))'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "25",
                  "resultValType": "static",
                  "resultVal": "| summarize percentiles(average, 25,50,75,100) | extend list = parse_json(strcat(\"[\", percentile_average_25,\",\",percentile_average_50,\",\",percentile_average_75,\",\",percentile_average_100, \"]\"))"
                }
              },
              {
                "condition": "if (Bucketize == '1'), result = '| extend list = parse_json(strcat(\"[\", 1000,\",\",2000,\",\",3000,\",\",4000,\",\",5000,\",\",6000,\",\",7000,\",\",8000,\",\",9000,\",\",10000, \"]\"))'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "| extend list = parse_json(strcat(\"[\", 1000,\",\",2000,\",\",3000,\",\",4000,\",\",5000,\",\",6000,\",\",7000,\",\",8000,\",\",9000,\",\",10000, \"]\"))"
                }
              },
              {
                "condition": "if (Bucketize == '5'), result = '| summarize percentiles(average, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100) | extend list = parse_json(strcat(\"[\", percentile_average_5,\",\",percentile_average_10,\",\",percentile_average_15,\",\",percentile_average_20,\",\",percentile_average_25,\",\",percentile_average_30,\",\",percentile_average_35,\",\",percentile_average_40,\",\",percentile_average_45,\",\",percentile_average_50,\",\",percentile_average_55,\",\",percentile_average_60,\",\",percentile_average_65,\",\",percentile_average_70,\",\",percentile_average_75,\",\",percentile_average_80,\",\",percentile_average_85,\",\",percentile_average_90,\",\",percentile_average_95,\",\",percentile_average_100, \"]\"))'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "5",
                  "resultValType": "static",
                  "resultVal": "| summarize percentiles(average, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100) | extend list = parse_json(strcat(\"[\", percentile_average_5,\",\",percentile_average_10,\",\",percentile_average_15,\",\",percentile_average_20,\",\",percentile_average_25,\",\",percentile_average_30,\",\",percentile_average_35,\",\",percentile_average_40,\",\",percentile_average_45,\",\",percentile_average_50,\",\",percentile_average_55,\",\",percentile_average_60,\",\",percentile_average_65,\",\",percentile_average_70,\",\",percentile_average_75,\",\",percentile_average_80,\",\",percentile_average_85,\",\",percentile_average_90,\",\",percentile_average_95,\",\",percentile_average_100, \"]\"))"
                }
              },
              {
                "condition": "else result = '| extend list = parse_json(strcat(\"[\", 250,\",\",500,\",\",750,\",\",1000,\",\",1250,\",\",1500,\",\",1750,\",\",2000,\",\",2250,\",\",2500,\",\",2750,\",\",3000,\",\",3250,\",\",3500,\",\",3750,\",\",4000,\",\",4250,\",\",4500,\",\",4750,\",\",5000, \"]\"))'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| extend list = parse_json(strcat(\"[\", 250,\",\",500,\",\",750,\",\",1000,\",\",1250,\",\",1500,\",\",1750,\",\",2000,\",\",2250,\",\",2500,\",\",2750,\",\",3000,\",\",3250,\",\",3500,\",\",3750,\",\",4000,\",\",4250,\",\",4500,\",\",4750,\",\",5000, \"]\"))"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "6a99cb19-efab-4114-a56f-4b20dc76bd83",
            "version": "KqlParameterItem/1.0",
            "name": "bucketizeFunc",
            "type": 1,
            "value": "case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9,metric > buckets[9] and metric <= buckets[10], 10,metric > buckets[10] and metric <= buckets[11], 11,metric > buckets[11] and metric <= buckets[12], 12,metric > buckets[12] and metric <= buckets[13], 13,metric > buckets[13] and metric <= buckets[14], 14,metric > buckets[14] and metric <= buckets[15], 15,metric > buckets[15] and metric <= buckets[16], 16,metric > buckets[16] and metric <= buckets[17], 17,metric > buckets[17] and metric <= buckets[18], 18,metric > buckets[18] and metric <= buckets[19], 19, -1)",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Bucketize == '0.5'), result = 'case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9, -1)'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0.5",
                  "resultValType": "static",
                  "resultVal": "case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9, -1)"
                }
              },
              {
                "condition": "if (Bucketize == '10'), result = 'case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9, -1)'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "10",
                  "resultValType": "static",
                  "resultVal": "case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9, -1)"
                }
              },
              {
                "condition": "if (Bucketize == '25'), result = 'case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3, -1)'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "25",
                  "resultValType": "static",
                  "resultVal": "case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3, -1)"
                }
              },
              {
                "condition": "if (Bucketize == '1'), result = 'case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9, -1)'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9, -1)"
                }
              },
              {
                "condition": "if (Bucketize == '5'), result = 'case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9,metric > buckets[9] and metric <= buckets[10], 10,metric > buckets[10] and metric <= buckets[11], 11,metric > buckets[11] and metric <= buckets[12], 12,metric > buckets[12] and metric <= buckets[13], 13,metric > buckets[13] and metric <= buckets[14], 14,metric > buckets[14] and metric <= buckets[15], 15,metric > buckets[15] and metric <= buckets[16], 16,metric > buckets[16] and metric <= buckets[17], 17,metric > buckets[17] and metric <= buckets[18], 18,metric > buckets[18] and metric <= buckets[19], 19, -1)'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "5",
                  "resultValType": "static",
                  "resultVal": "case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9,metric > buckets[9] and metric <= buckets[10], 10,metric > buckets[10] and metric <= buckets[11], 11,metric > buckets[11] and metric <= buckets[12], 12,metric > buckets[12] and metric <= buckets[13], 13,metric > buckets[13] and metric <= buckets[14], 14,metric > buckets[14] and metric <= buckets[15], 15,metric > buckets[15] and metric <= buckets[16], 16,metric > buckets[16] and metric <= buckets[17], 17,metric > buckets[17] and metric <= buckets[18], 18,metric > buckets[18] and metric <= buckets[19], 19, -1)"
                }
              },
              {
                "condition": "else result = 'case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9,metric > buckets[9] and metric <= buckets[10], 10,metric > buckets[10] and metric <= buckets[11], 11,metric > buckets[11] and metric <= buckets[12], 12,metric > buckets[12] and metric <= buckets[13], 13,metric > buckets[13] and metric <= buckets[14], 14,metric > buckets[14] and metric <= buckets[15], 15,metric > buckets[15] and metric <= buckets[16], 16,metric > buckets[16] and metric <= buckets[17], 17,metric > buckets[17] and metric <= buckets[18], 18,metric > buckets[18] and metric <= buckets[19], 19, -1)'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "case(metric >= 0 and metric <= buckets[0], 0,metric > buckets[0] and metric <= buckets[1], 1,metric > buckets[1] and metric <= buckets[2], 2,metric > buckets[2] and metric <= buckets[3], 3,metric > buckets[3] and metric <= buckets[4], 4,metric > buckets[4] and metric <= buckets[5], 5,metric > buckets[5] and metric <= buckets[6], 6,metric > buckets[6] and metric <= buckets[7], 7,metric > buckets[7] and metric <= buckets[8], 8,metric > buckets[8] and metric <= buckets[9], 9,metric > buckets[9] and metric <= buckets[10], 10,metric > buckets[10] and metric <= buckets[11], 11,metric > buckets[11] and metric <= buckets[12], 12,metric > buckets[12] and metric <= buckets[13], 13,metric > buckets[13] and metric <= buckets[14], 14,metric > buckets[14] and metric <= buckets[15], 15,metric > buckets[15] and metric <= buckets[16], 16,metric > buckets[16] and metric <= buckets[17], 17,metric > buckets[17] and metric <= buckets[18], 18,metric > buckets[18] and metric <= buckets[19], 19, -1)"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "10d00564-f0c4-4dbe-b4dd-781cfc7cea78",
            "version": "KqlParameterItem/1.0",
            "name": "bucketLabel",
            "type": 1,
            "value": "case(bucket == 0, \"Ventile 1\",bucket == 1, \"Ventile 2\",bucket == 2, \"Ventile 3\",bucket == 3, \"Ventile 4\",bucket == 4, \"Ventile 5\",bucket == 5, \"Ventile 6\",bucket == 6, \"Ventile 7\",bucket == 7, \"Ventile 8\",bucket == 8, \"Ventile 9\",bucket == 9, \"Ventile 10\",bucket == 10, \"Ventile 11\",bucket == 11, \"Ventile 12\",bucket == 12, \"Ventile 13\",bucket == 13, \"Ventile 14\",bucket == 14, \"Ventile 15\",bucket == 15, \"Ventile 16\",bucket == 16, \"Ventile 17\",bucket == 17, \"Ventile 18\",bucket == 18, \"Ventile 19\",bucket == 19, \"Ventile 20\", \"\")",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Bucketize == '0.5'), result = 'case(bucket == 0, \"0s - 0.5s\",bucket == 1, \"0.5s - 1s\",bucket == 2, \"1s - 1.5s\",bucket == 3, \"1.5s - 2s\",bucket == 4, \"2s - 2.5s\",bucket == 5, \"2.5s - 3s\",bucket == 6, \"3s - 3.5s\",bucket == 7, \"3.5s - 4s\",bucket == 8, \"4s - 4.5s\",bucket == 9, \"4.5s - 5s\", \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0.5",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"0s - 0.5s\",bucket == 1, \"0.5s - 1s\",bucket == 2, \"1s - 1.5s\",bucket == 3, \"1.5s - 2s\",bucket == 4, \"2s - 2.5s\",bucket == 5, \"2.5s - 3s\",bucket == 6, \"3s - 3.5s\",bucket == 7, \"3.5s - 4s\",bucket == 8, \"4s - 4.5s\",bucket == 9, \"4.5s - 5s\", \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '10'), result = 'case(bucket == 0, \"Decile 1\",bucket == 1, \"Decile 2\",bucket == 2, \"Decile 3\",bucket == 3, \"Decile 4\",bucket == 4, \"Decile 5\",bucket == 5, \"Decile 6\",bucket == 6, \"Decile 7\",bucket == 7, \"Decile 8\",bucket == 8, \"Decile 9\",bucket == 9, \"Decile 10\", \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "10",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"Decile 1\",bucket == 1, \"Decile 2\",bucket == 2, \"Decile 3\",bucket == 3, \"Decile 4\",bucket == 4, \"Decile 5\",bucket == 5, \"Decile 6\",bucket == 6, \"Decile 7\",bucket == 7, \"Decile 8\",bucket == 8, \"Decile 9\",bucket == 9, \"Decile 10\", \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '25'), result = 'case(bucket == 0, \"Quartile 1\",bucket == 1, \"Quartile 2\",bucket == 2, \"Quartile 3\",bucket == 3, \"Quartile 4\", \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "25",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"Quartile 1\",bucket == 1, \"Quartile 2\",bucket == 2, \"Quartile 3\",bucket == 3, \"Quartile 4\", \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '1'), result = 'case(bucket == 0, \"0s - 1s\",bucket == 1, \"1s - 2s\",bucket == 2, \"2s - 3s\",bucket == 3, \"3s - 4s\",bucket == 4, \"4s - 5s\",bucket == 5, \"5s - 6s\",bucket == 6, \"6s - 7s\",bucket == 7, \"7s - 8s\",bucket == 8, \"8s - 9s\",bucket == 9, \"9s - 10s\", \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"0s - 1s\",bucket == 1, \"1s - 2s\",bucket == 2, \"2s - 3s\",bucket == 3, \"3s - 4s\",bucket == 4, \"4s - 5s\",bucket == 5, \"5s - 6s\",bucket == 6, \"6s - 7s\",bucket == 7, \"7s - 8s\",bucket == 8, \"8s - 9s\",bucket == 9, \"9s - 10s\", \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '5'), result = 'case(bucket == 0, \"Ventile 1\",bucket == 1, \"Ventile 2\",bucket == 2, \"Ventile 3\",bucket == 3, \"Ventile 4\",bucket == 4, \"Ventile 5\",bucket == 5, \"Ventile 6\",bucket == 6, \"Ventile 7\",bucket == 7, \"Ventile 8\",bucket == 8, \"Ventile 9\",bucket == 9, \"Ventile 10\",bucket == 10, \"Ventile 11\",bucket == 11, \"Ventile 12\",bucket == 12, \"Ventile 13\",bucket == 13, \"Ventile 14\",bucket == 14, \"Ventile 15\",bucket == 15, \"Ventile 16\",bucket == 16, \"Ventile 17\",bucket == 17, \"Ventile 18\",bucket == 18, \"Ventile 19\",bucket == 19, \"Ventile 20\", \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "5",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"Ventile 1\",bucket == 1, \"Ventile 2\",bucket == 2, \"Ventile 3\",bucket == 3, \"Ventile 4\",bucket == 4, \"Ventile 5\",bucket == 5, \"Ventile 6\",bucket == 6, \"Ventile 7\",bucket == 7, \"Ventile 8\",bucket == 8, \"Ventile 9\",bucket == 9, \"Ventile 10\",bucket == 10, \"Ventile 11\",bucket == 11, \"Ventile 12\",bucket == 12, \"Ventile 13\",bucket == 13, \"Ventile 14\",bucket == 14, \"Ventile 15\",bucket == 15, \"Ventile 16\",bucket == 16, \"Ventile 17\",bucket == 17, \"Ventile 18\",bucket == 18, \"Ventile 19\",bucket == 19, \"Ventile 20\", \"\")"
                }
              },
              {
                "condition": "else result = 'case(bucket == 0, \"0s - 0.25s\",bucket == 1, \"0.25s - 0.5s\",bucket == 2, \"0.5s - 0.75s\",bucket == 3, \"0.75s - 1s\",bucket == 4, \"1s - 1.25s\",bucket == 5, \"1.25s - 1.5s\",bucket == 6, \"1.5s - 1.75s\",bucket == 7, \"1.75s - 2s\",bucket == 8, \"2s - 2.25s\",bucket == 9, \"2.25s - 2.5s\",bucket == 10, \"2.5s - 2.75s\",bucket == 11, \"2.75s - 3s\",bucket == 12, \"3s - 3.25s\",bucket == 13, \"3.25s - 3.5s\",bucket == 14, \"3.5s - 3.75s\",bucket == 15, \"3.75s - 4s\",bucket == 16, \"4s - 4.25s\",bucket == 17, \"4.25s - 4.5s\",bucket == 18, \"4.5s - 4.75s\",bucket == 19, \"4.75s - 5s\", \"\")'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"0s - 0.25s\",bucket == 1, \"0.25s - 0.5s\",bucket == 2, \"0.5s - 0.75s\",bucket == 3, \"0.75s - 1s\",bucket == 4, \"1s - 1.25s\",bucket == 5, \"1.25s - 1.5s\",bucket == 6, \"1.5s - 1.75s\",bucket == 7, \"1.75s - 2s\",bucket == 8, \"2s - 2.25s\",bucket == 9, \"2.25s - 2.5s\",bucket == 10, \"2.5s - 2.75s\",bucket == 11, \"2.75s - 3s\",bucket == 12, \"3s - 3.25s\",bucket == 13, \"3.25s - 3.5s\",bucket == 14, \"3.5s - 3.75s\",bucket == 15, \"3.75s - 4s\",bucket == 16, \"4s - 4.25s\",bucket == 17, \"4.25s - 4.5s\",bucket == 18, \"4.5s - 4.75s\",bucket == 19, \"4.75s - 5s\", \"\")"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "46276124-a667-4cb0-926e-056a309b91f9",
            "version": "KqlParameterItem/1.0",
            "name": "bucketTooltip",
            "type": 1,
            "value": "case(bucket == 0, strcat(0 , \" s \", \"to\", \" \" , buckets[0]*100/100000.0, \" s\"),bucket == 1, strcat(buckets[0]*100/100000.0 , \" s \", \"to\", \" \" , buckets[1]*100/100000.0, \" s\"),bucket == 2, strcat(buckets[1]*100/100000.0 , \" s \", \"to\", \" \" , buckets[2]*100/100000.0, \" s\"),bucket == 3, strcat(buckets[2]*100/100000.0 , \" s \", \"to\", \" \" , buckets[3]*100/100000.0, \" s\"),bucket == 4, strcat(buckets[3]*100/100000.0 , \" s \", \"to\", \" \" , buckets[4]*100/100000.0, \" s\"),bucket == 5, strcat(buckets[4]*100/100000.0 , \" s \", \"to\", \" \" , buckets[5]*100/100000.0, \" s\"),bucket == 6, strcat(buckets[5]*100/100000.0 , \" s \", \"to\", \" \" , buckets[6]*100/100000.0, \" s\"),bucket == 7, strcat(buckets[6]*100/100000.0 , \" s \", \"to\", \" \" , buckets[7]*100/100000.0, \" s\"),bucket == 8, strcat(buckets[7]*100/100000.0 , \" s \", \"to\", \" \" , buckets[8]*100/100000.0, \" s\"),bucket == 9, strcat(buckets[8]*100/100000.0 , \" s \", \"to\", \" \" , buckets[9]*100/100000.0, \" s\"),bucket == 10, strcat(buckets[9]*100/100000.0 , \" s \", \"to\", \" \" , buckets[10]*100/100000.0, \" s\"),bucket == 11, strcat(buckets[10]*100/100000.0 , \" s \", \"to\", \" \" , buckets[11]*100/100000.0, \" s\"),bucket == 12, strcat(buckets[11]*100/100000.0 , \" s \", \"to\", \" \" , buckets[12]*100/100000.0, \" s\"),bucket == 13, strcat(buckets[12]*100/100000.0 , \" s \", \"to\", \" \" , buckets[13]*100/100000.0, \" s\"),bucket == 14, strcat(buckets[13]*100/100000.0 , \" s \", \"to\", \" \" , buckets[14]*100/100000.0, \" s\"),bucket == 15, strcat(buckets[14]*100/100000.0 , \" s \", \"to\", \" \" , buckets[15]*100/100000.0, \" s\"),bucket == 16, strcat(buckets[15]*100/100000.0 , \" s \", \"to\", \" \" , buckets[16]*100/100000.0, \" s\"),bucket == 17, strcat(buckets[16]*100/100000.0 , \" s \", \"to\", \" \" , buckets[17]*100/100000.0, \" s\"),bucket == 18, strcat(buckets[17]*100/100000.0 , \" s \", \"to\", \" \" , buckets[18]*100/100000.0, \" s\"),bucket == 19, strcat(buckets[18]*100/100000.0 , \" s \", \"to\", \" \" , buckets[19]*100/100000.0, \" s\"), \"\")",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Bucketize == '0.5'), result = 'case(bucket == 0, \"\",bucket == 1, \"\",bucket == 2, \"\",bucket == 3, \"\",bucket == 4, \"\",bucket == 5, \"\",bucket == 6, \"\",bucket == 7, \"\",bucket == 8, \"\",bucket == 9, \"\", \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0.5",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"\",bucket == 1, \"\",bucket == 2, \"\",bucket == 3, \"\",bucket == 4, \"\",bucket == 5, \"\",bucket == 6, \"\",bucket == 7, \"\",bucket == 8, \"\",bucket == 9, \"\", \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '10'), result = 'case(bucket == 0, strcat(0 , \" s \", \"to\", \" \" , buckets[0]*100/100000.0, \" s\"),bucket == 1, strcat(buckets[0]*100/100000.0 , \" s \", \"to\", \" \" , buckets[1]*100/100000.0, \" s\"),bucket == 2, strcat(buckets[1]*100/100000.0 , \" s \", \"to\", \" \" , buckets[2]*100/100000.0, \" s\"),bucket == 3, strcat(buckets[2]*100/100000.0 , \" s \", \"to\", \" \" , buckets[3]*100/100000.0, \" s\"),bucket == 4, strcat(buckets[3]*100/100000.0 , \" s \", \"to\", \" \" , buckets[4]*100/100000.0, \" s\"),bucket == 5, strcat(buckets[4]*100/100000.0 , \" s \", \"to\", \" \" , buckets[5]*100/100000.0, \" s\"),bucket == 6, strcat(buckets[5]*100/100000.0 , \" s \", \"to\", \" \" , buckets[6]*100/100000.0, \" s\"),bucket == 7, strcat(buckets[6]*100/100000.0 , \" s \", \"to\", \" \" , buckets[7]*100/100000.0, \" s\"),bucket == 8, strcat(buckets[7]*100/100000.0 , \" s \", \"to\", \" \" , buckets[8]*100/100000.0, \" s\"),bucket == 9, strcat(buckets[8]*100/100000.0 , \" s \", \"to\", \" \" , buckets[9]*100/100000.0, \" s\"), \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "10",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, strcat(0 , \" s \", \"to\", \" \" , buckets[0]*100/100000.0, \" s\"),bucket == 1, strcat(buckets[0]*100/100000.0 , \" s \", \"to\", \" \" , buckets[1]*100/100000.0, \" s\"),bucket == 2, strcat(buckets[1]*100/100000.0 , \" s \", \"to\", \" \" , buckets[2]*100/100000.0, \" s\"),bucket == 3, strcat(buckets[2]*100/100000.0 , \" s \", \"to\", \" \" , buckets[3]*100/100000.0, \" s\"),bucket == 4, strcat(buckets[3]*100/100000.0 , \" s \", \"to\", \" \" , buckets[4]*100/100000.0, \" s\"),bucket == 5, strcat(buckets[4]*100/100000.0 , \" s \", \"to\", \" \" , buckets[5]*100/100000.0, \" s\"),bucket == 6, strcat(buckets[5]*100/100000.0 , \" s \", \"to\", \" \" , buckets[6]*100/100000.0, \" s\"),bucket == 7, strcat(buckets[6]*100/100000.0 , \" s \", \"to\", \" \" , buckets[7]*100/100000.0, \" s\"),bucket == 8, strcat(buckets[7]*100/100000.0 , \" s \", \"to\", \" \" , buckets[8]*100/100000.0, \" s\"),bucket == 9, strcat(buckets[8]*100/100000.0 , \" s \", \"to\", \" \" , buckets[9]*100/100000.0, \" s\"), \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '25'), result = 'case(bucket == 0, strcat(0 , \" s \", \"to\", \" \" , buckets[0]*100/100000.0, \" s\"),bucket == 1, strcat(buckets[0]*100/100000.0 , \" s \", \"to\", \" \" , buckets[1]*100/100000.0, \" s\"),bucket == 2, strcat(buckets[1]*100/100000.0 , \" s \", \"to\", \" \" , buckets[2]*100/100000.0, \" s\"),bucket == 3, strcat(buckets[2]*100/100000.0 , \" s \", \"to\", \" \" , buckets[3]*100/100000.0, \" s\"), \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "25",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, strcat(0 , \" s \", \"to\", \" \" , buckets[0]*100/100000.0, \" s\"),bucket == 1, strcat(buckets[0]*100/100000.0 , \" s \", \"to\", \" \" , buckets[1]*100/100000.0, \" s\"),bucket == 2, strcat(buckets[1]*100/100000.0 , \" s \", \"to\", \" \" , buckets[2]*100/100000.0, \" s\"),bucket == 3, strcat(buckets[2]*100/100000.0 , \" s \", \"to\", \" \" , buckets[3]*100/100000.0, \" s\"), \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '1'), result = 'case(bucket == 0, \"\",bucket == 1, \"\",bucket == 2, \"\",bucket == 3, \"\",bucket == 4, \"\",bucket == 5, \"\",bucket == 6, \"\",bucket == 7, \"\",bucket == 8, \"\",bucket == 9, \"\", \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"\",bucket == 1, \"\",bucket == 2, \"\",bucket == 3, \"\",bucket == 4, \"\",bucket == 5, \"\",bucket == 6, \"\",bucket == 7, \"\",bucket == 8, \"\",bucket == 9, \"\", \"\")"
                }
              },
              {
                "condition": "if (Bucketize == '5'), result = 'case(bucket == 0, strcat(0 , \" s \", \"to\", \" \" , buckets[0]*100/100000.0, \" s\"),bucket == 1, strcat(buckets[0]*100/100000.0 , \" s \", \"to\", \" \" , buckets[1]*100/100000.0, \" s\"),bucket == 2, strcat(buckets[1]*100/100000.0 , \" s \", \"to\", \" \" , buckets[2]*100/100000.0, \" s\"),bucket == 3, strcat(buckets[2]*100/100000.0 , \" s \", \"to\", \" \" , buckets[3]*100/100000.0, \" s\"),bucket == 4, strcat(buckets[3]*100/100000.0 , \" s \", \"to\", \" \" , buckets[4]*100/100000.0, \" s\"),bucket == 5, strcat(buckets[4]*100/100000.0 , \" s \", \"to\", \" \" , buckets[5]*100/100000.0, \" s\"),bucket == 6, strcat(buckets[5]*100/100000.0 , \" s \", \"to\", \" \" , buckets[6]*100/100000.0, \" s\"),bucket == 7, strcat(buckets[6]*100/100000.0 , \" s \", \"to\", \" \" , buckets[7]*100/100000.0, \" s\"),bucket == 8, strcat(buckets[7]*100/100000.0 , \" s \", \"to\", \" \" , buckets[8]*100/100000.0, \" s\"),bucket == 9, strcat(buckets[8]*100/100000.0 , \" s \", \"to\", \" \" , buckets[9]*100/100000.0, \" s\"),bucket == 10, strcat(buckets[9]*100/100000.0 , \" s \", \"to\", \" \" , buckets[10]*100/100000.0, \" s\"),bucket == 11, strcat(buckets[10]*100/100000.0 , \" s \", \"to\", \" \" , buckets[11]*100/100000.0, \" s\"),bucket == 12, strcat(buckets[11]*100/100000.0 , \" s \", \"to\", \" \" , buckets[12]*100/100000.0, \" s\"),bucket == 13, strcat(buckets[12]*100/100000.0 , \" s \", \"to\", \" \" , buckets[13]*100/100000.0, \" s\"),bucket == 14, strcat(buckets[13]*100/100000.0 , \" s \", \"to\", \" \" , buckets[14]*100/100000.0, \" s\"),bucket == 15, strcat(buckets[14]*100/100000.0 , \" s \", \"to\", \" \" , buckets[15]*100/100000.0, \" s\"),bucket == 16, strcat(buckets[15]*100/100000.0 , \" s \", \"to\", \" \" , buckets[16]*100/100000.0, \" s\"),bucket == 17, strcat(buckets[16]*100/100000.0 , \" s \", \"to\", \" \" , buckets[17]*100/100000.0, \" s\"),bucket == 18, strcat(buckets[17]*100/100000.0 , \" s \", \"to\", \" \" , buckets[18]*100/100000.0, \" s\"),bucket == 19, strcat(buckets[18]*100/100000.0 , \" s \", \"to\", \" \" , buckets[19]*100/100000.0, \" s\"), \"\")'",
                "criteriaContext": {
                  "leftOperand": "Bucketize",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "5",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, strcat(0 , \" s \", \"to\", \" \" , buckets[0]*100/100000.0, \" s\"),bucket == 1, strcat(buckets[0]*100/100000.0 , \" s \", \"to\", \" \" , buckets[1]*100/100000.0, \" s\"),bucket == 2, strcat(buckets[1]*100/100000.0 , \" s \", \"to\", \" \" , buckets[2]*100/100000.0, \" s\"),bucket == 3, strcat(buckets[2]*100/100000.0 , \" s \", \"to\", \" \" , buckets[3]*100/100000.0, \" s\"),bucket == 4, strcat(buckets[3]*100/100000.0 , \" s \", \"to\", \" \" , buckets[4]*100/100000.0, \" s\"),bucket == 5, strcat(buckets[4]*100/100000.0 , \" s \", \"to\", \" \" , buckets[5]*100/100000.0, \" s\"),bucket == 6, strcat(buckets[5]*100/100000.0 , \" s \", \"to\", \" \" , buckets[6]*100/100000.0, \" s\"),bucket == 7, strcat(buckets[6]*100/100000.0 , \" s \", \"to\", \" \" , buckets[7]*100/100000.0, \" s\"),bucket == 8, strcat(buckets[7]*100/100000.0 , \" s \", \"to\", \" \" , buckets[8]*100/100000.0, \" s\"),bucket == 9, strcat(buckets[8]*100/100000.0 , \" s \", \"to\", \" \" , buckets[9]*100/100000.0, \" s\"),bucket == 10, strcat(buckets[9]*100/100000.0 , \" s \", \"to\", \" \" , buckets[10]*100/100000.0, \" s\"),bucket == 11, strcat(buckets[10]*100/100000.0 , \" s \", \"to\", \" \" , buckets[11]*100/100000.0, \" s\"),bucket == 12, strcat(buckets[11]*100/100000.0 , \" s \", \"to\", \" \" , buckets[12]*100/100000.0, \" s\"),bucket == 13, strcat(buckets[12]*100/100000.0 , \" s \", \"to\", \" \" , buckets[13]*100/100000.0, \" s\"),bucket == 14, strcat(buckets[13]*100/100000.0 , \" s \", \"to\", \" \" , buckets[14]*100/100000.0, \" s\"),bucket == 15, strcat(buckets[14]*100/100000.0 , \" s \", \"to\", \" \" , buckets[15]*100/100000.0, \" s\"),bucket == 16, strcat(buckets[15]*100/100000.0 , \" s \", \"to\", \" \" , buckets[16]*100/100000.0, \" s\"),bucket == 17, strcat(buckets[16]*100/100000.0 , \" s \", \"to\", \" \" , buckets[17]*100/100000.0, \" s\"),bucket == 18, strcat(buckets[17]*100/100000.0 , \" s \", \"to\", \" \" , buckets[18]*100/100000.0, \" s\"),bucket == 19, strcat(buckets[18]*100/100000.0 , \" s \", \"to\", \" \" , buckets[19]*100/100000.0, \" s\"), \"\")"
                }
              },
              {
                "condition": "else result = 'case(bucket == 0, \"\",bucket == 1, \"\",bucket == 2, \"\",bucket == 3, \"\",bucket == 4, \"\",bucket == 5, \"\",bucket == 6, \"\",bucket == 7, \"\",bucket == 8, \"\",bucket == 9, \"\",bucket == 10, \"\",bucket == 11, \"\",bucket == 12, \"\",bucket == 13, \"\",bucket == 14, \"\",bucket == 15, \"\",bucket == 16, \"\",bucket == 17, \"\",bucket == 18, \"\",bucket == 19, \"\", \"\")'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "case(bucket == 0, \"\",bucket == 1, \"\",bucket == 2, \"\",bucket == 3, \"\",bucket == 4, \"\",bucket == 5, \"\",bucket == 6, \"\",bucket == 7, \"\",bucket == 8, \"\",bucket == 9, \"\",bucket == 10, \"\",bucket == 11, \"\",bucket == 12, \"\",bucket == 13, \"\",bucket == 14, \"\",bucket == 15, \"\",bucket == 16, \"\",bucket == 17, \"\",bucket == 18, \"\",bucket == 19, \"\", \"\")"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "18dbb5f3-6f1b-4b0b-8ab8-e0bb6f90e4ac",
            "version": "KqlParameterItem/1.0",
            "name": "Correlation",
            "type": 1,
