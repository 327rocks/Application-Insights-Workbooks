{
  "version": "Notebook/1.0",
  "isLocked": true,
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Performance Insights"
      },
      "conditionalVisibility": null
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "e94aafa3-c5d9-4523-89f0-4e87aa754511",
            "version": "KqlParameterItem/1.0",
            "name": "Apps",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "isHiddenWhenLocked": false,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.insights/components": true
              },
              "additionalResourceOptions": [
                "value::all",
                "value::3"
              ]
            },
            "value": [
              "value::3"
            ]
          },
          {
            "id": "c4b69c01-2263-4ada-8d9c-43433b739ff3",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": false,
            "isHiddenWhenLocked": false,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000,
                  "createdTime": "2018-08-06T23:52:38.870Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 900000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 1800000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 3600000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 14400000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 43200000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 86400000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 172800000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 259200000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 604800000,
                  "createdTime": "2018-08-06T23:52:38.871Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                }
              ],
              "allowCustom": null
            },
            "value": {
              "durationMs": 14400000,
              "createdTime": "2018-08-06T23:52:38.871Z",
              "isInitialTime": false,
              "grain": 1,
              "useDashboardTimeRange": false
            }
          },
          {
            "id": "1014e6d9-72b9-4729-a3a0-f5704768854e",
            "version": "KqlParameterItem/1.0",
            "name": "Operation",
            "type": 1,
            "isRequired": false,
            "isHiddenWhenLocked": true,
            "value": "{\"App\":\"\",\"Operation\":\"\"}"
          },
          {
            "id": "9fb8e529-2818-4000-bdf0-48808de48eb7",
            "version": "KqlParameterItem/1.0",
            "name": "Columns",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "isHiddenWhenLocked": false,
            "jsonData": "[\"Mean\", \"Median\", \"p80\", \"p95\", \"p99\", \"Count\", \"Users\"]",
            "value": [
              "Mean",
              "Median",
              "p95",
              "Count"
            ]
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = requests\n| where timestamp {TimeRange};\ndata\n| summarize Mean = avg(duration), (Median, p80, p95, p99) = percentiles(duration, 50, 80, 95, 99), Count = count(), Users = dcount(user_Id) by name, appName\n| project App = appName, Operation = name, Mean, Median, p80, p95, p99, Count, Users, rank = 2\n| union (data\n    | summarize Mean = avg(duration), (Median, p80, p95, p99) = percentiles(duration, 50, 80, 95, 99), Count = count(), Users = dcount(user_Id)\n    | project App = 'ðŸ”¸ All Apps', Operation = 'ðŸ”¸ All operations', Mean, Median, p80, p95, p99, Count, Users, rank = 1)\n| extend Relevance = Mean * Count\n| order by rank asc, Relevance desc\n| project-away Relevance, rank\n| extend Mean = round(Mean, 2), Median = round(Median, 1), p80 = round(p80, 2), p95 = round(p95, 2), p99 = round(p99, 2)\n| project App, Operation, {Columns}\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 0,
        "showAnnotations": false,
        "exportParameterName": "Operation",
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "crossComponentResources": [
          "{Apps}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Mean|Median|p80|p95|p99",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "red"
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Users",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blueDark"
              }
            }
          ]
        }
      },
      "conditionalVisibility": null
    },
    {
      "type": 1,
      "content": {
        "json": "ðŸ’¡ *Click on the rows of the table above to see details for other operations*"
      },
      "conditionalVisibility": null
    },
    {
      "type": 1,
      "content": {
        "json": ""
      },
      "conditionalVisibility": null
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "b09bfb5a-093f-4099-a5fb-e0fca139cc3d",
            "version": "KqlParameterItem/1.0",
            "name": "SelectedOperation",
            "type": 1,
            "isRequired": true,
            "query": "let row = dynamic({Operation});\r\nlet operation = tostring(row.Operation);\r\nlet app = tostring(row.App);\r\nrange i from 1 to 1 step 1\r\n| project Operation = iff((operation == '' and app == '') or (operation == 'ðŸ”¸ All operations' and app == 'ðŸ”¸ All Apps'), 'all operations', operation)",
            "isHiddenWhenLocked": true,
            "jsonData": "",
            "resourceType": "microsoft.insights/components"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null
    },
    {
      "type": 1,
      "content": {
        "json": "## Details -- {SelectedOperation}\n"
      },
      "conditionalVisibility": null
    },
    {
      "type": 1,
      "content": {
        "json": "### Operation Duration (ms)\n"
      },
      "conditionalVisibility": null,
      "customWidth": "52"
    },
    {
      "type": 1,
      "content": {
        "json": "### All Operations"
      },
      "conditionalVisibility": null,
      "customWidth": "40"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "1bbd1900-9445-4ac0-bb5d-f15dbe5f4485",
            "version": "KqlParameterItem/1.0",
            "name": "Show",
            "type": 2,
            "isRequired": true,
            "query": "datatable(value:string, label:string)[\n\"avg(duration)\", \"Mean\",\n\"percentile(duration, 50)\", \"Median\",\n\"percentile(duration, 80)\", \"p80\",\n\"percentile(duration, 95)\", \"p95\",\n\"percentile(duration, 99)\", \"p99\"\n]",
            "value": "percentile(duration, 95)",
            "isHiddenWhenLocked": false,
            "resourceType": "microsoft.insights/components"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let row = dynamic({Operation});\nlet operation = tostring(row.Operation);\nlet app = tostring(row.App);\nrequests\n| where timestamp {TimeRange}\n| where (name == operation and appName == app) or (operation == '' and app == '') or (operation == 'ðŸ”¸ All operations' and app == 'ðŸ”¸ All Apps')\n| make-series Duration = {Show} default = 0 on timestamp in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain})\n| mvexpand timestamp to typeof(datetime), Duration to typeof(long)\n",
        "showQuery": false,
        "size": 1,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "crossComponentResources": [
          "{Apps}"
        ],
        "visualization": "areachart"
      },
      "conditionalVisibility": null,
      "customWidth": "46"
    },
    {
      "type": 1,
      "content": {
        "json": ""
      },
      "conditionalVisibility": null,
      "customWidth": "6"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let row = dynamic({Operation});\nlet operation = tostring(row.Operation);\nlet app = tostring(row.App);\nrequests\n| where timestamp {TimeRange}\n| where (name == operation and appName == app) or (operation == '' and app == '') or (operation == 'ðŸ”¸ All operations' and app == 'ðŸ”¸ All Apps')\n| make-series Requests = count() default = 0 on timestamp in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain})\n| mvexpand timestamp to typeof(datetime), Requests to typeof(long)\n",
        "showQuery": false,
        "size": 1,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "crossComponentResources": [
          "{Apps}"
        ],
        "visualization": "areachart"
      },
      "conditionalVisibility": null,
      "customWidth": "46"
    },
    {
      "type": 1,
      "content": {
        "json": "### Distribution of Durations (log scale)"
      },
      "conditionalVisibility": null,
      "customWidth": "60"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let buckets = 15;\nlet row = dynamic({Operation});\nlet operation = tostring(row.Operation);\nlet app = tostring(row.App);\nlet data = requests\n| where timestamp {TimeRange}\n| where (name == operation and appName == app) or (operation == '' and app == '') or (operation == 'ðŸ”¸ All operations' and app == 'ðŸ”¸ All Apps')\n| summarize Requests = count() by Bucket = bin(duration, 1);\nlet maxBucket = toscalar(data | summarize max(Bucket));\nlet base = exp(log(maxBucket) / buckets);\ndata\n| extend LogBucket = bin(log(Bucket) / log(base), 1)\n| summarize Requests = sum(Requests) by LogBucket\n| project Duration = round(exp(log(base) * LogBucket), 1), DurationEnd = round(exp(log(base) * (LogBucket + 1)) - 0.1, 1), Requests, LogBucket\n| order by Duration asc\n| project ['Request Duration (ms)'] = strcat(Duration, ' to ', iff(DurationEnd >= Duration, DurationEnd, Duration)) , Requests\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "crossComponentResources": [
          "{Apps}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Requests",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "green"
              }
            }
          ]
        }
      },
      "conditionalVisibility": null,
      "customWidth": "46"
    }
  ]
}