{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">Select Log Analytics Workspace </span> <br> <span style=\"font-size:12px;\"> <a href=\"#\"> How to configure vault diagnostic settings for backup reports </a> </span> </div> <div style=\"text-align:right; float:right\"> <span style=\"font-size:12px;\"> <a href=\"#\"> What happened to the Power BI reports? </a> </span> </div>"
      },
      "name": "text - 11"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "d1f42f81-eb8f-4653-a0ff-38564d7487b4",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "description": "Subscriptions to filter the list of workspaces",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false,
              "selectAllValue": ""
            }
          },
          {
            "id": "2373a24f-ad32-4909-a7f6-59b373dcde6c",
            "version": "KqlParameterItem/1.0",
            "name": "Workspaces",
            "type": 5,
            "description": "LA Workspaces configured in vault diagnostic settings",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type =~ 'microsoft.operationalinsights/workspaces' | project id",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "50",
      "name": "parameters - 1"
    },
    {
      "type": 1,
      "content": {
        "json": "_____"
      },
      "name": "text - 9"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">Report Filters </span> </div> <div style=\"text-align:right; float:right\"> <span style=\"font-size:12px;\"> <a href=\"#\"> How to use backup reports? </a> </span> </div>"
      },
      "name": "text - 12"
    },
    {
      "type": 1,
      "content": {
        "json": "<p> ðŸ’¡ <span style=\"font-size:12px; font-style:italic\"> Filters are applied left to right and top to bottom on each page. </span> </p>"
      },
      "name": "text - 13"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "parameters": [
          {
            "id": "8c4ae44c-fa9a-4498-aedc-736a56e64b43",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "value": {
              "durationMs": 604800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "label": "Time Range"
          },
          {
            "id": "4756b65c-80b2-4477-9bec-626cc713dfd7",
            "version": "KqlParameterItem/1.0",
            "name": "BMSTypeWithBackupItemType",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "// Fetch data from AzureDiagnostics\r\nlet RecordsUnderAzureDiagnostics = ( ) \r\n{\r\nAzureDiagnostics\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\"\r\n| extend  BackupManagementType = BackupManagementType_s, BackupItemType = BackupItemType_s \r\n};\r\n// Fetch data from ResourceSpecific\r\nlet RecordsUnderResourceSpecific = ( ) \r\n{\r\nCoreAzureBackup\r\n| where OperationName == \"BackupItem\"\r\n};\r\nCombinedTable | union isfuzzy = true \r\n(RecordsUnderAzureDiagnostics()),\r\n(RecordsUnderResourceSpecific())\r\n| distinct BackupManagementType, BackupItemType\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType) \r\n| distinct BMSTypeWithBackupItemType",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "BackupItem Type"
          },
          {
            "id": "2a83acc5-2123-476f-8a4c-da2fddf231a1",
            "version": "KqlParameterItem/1.0",
            "name": "Location",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = VaultName_s, AzureDataCenter = AzureDataCenter_s\r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| distinct AzureDataCenter};\r\nLatestBackupItemTable",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "Vault Location"
          },
          {
            "id": "fefd31fa-2774-43ca-8cc3-44d477c969f0",
            "version": "KqlParameterItem/1.0",
            "name": "Vault",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "// Parameter Used -  BMSTypeWithBackupItemType, Location\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n// Filter by Parameter\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| extend VaultName = VaultName_s, AzureDataCenter = AzureDataCenter_s\r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n// Filter by Parameter\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| distinct VaultName};\r\nLatestBackupItemTable",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "Vault Name"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "customWidth": "100",
      "name": "parameters - 7",
      "styleSettings": {
        "maxWidth": "100%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": " â“˜ <span style=\"font-size:12px;font-style:italic\"> All datetimes are in UTC. Data for the current partial day is not shown in the reports.</span></div>"
      },
      "name": "text - 14",
      "styleSettings": {
        "margin": "0% 0% 0% 0%",
        "padding": "0% 0% 0% 0%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "__________________________________________________________________________________________"
      },
      "name": "text - 12",
      "styleSettings": {
        "padding": "0px 0px 10px 0px"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
            "linkTarget": "step",
            "linkLabel": "Summary",
            "subTarget": "{BackupManagementType}",
            "style": "primary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "13bf0ff5-c132-4c85-910e-9de00bb3d26e",
              "typeSource": "workbook",
              "gallerySource": "workbook"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Protected Instances",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Protected Instances",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Storage",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Storage",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Job Distribution",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Job Distribution",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Job Details",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Job Details",
              "typeSource": "workbook",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Alert Distribution",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Alert Distribution",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Alert Details",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Alert Details",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          }
        ]
      },
      "name": "links - 8"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = materialize(CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| project BackupItemUniqueId);\r\nlet BackupItemAssociationUnderAzureDiagnostics = ( )\r\n{\r\nlet BackupItemAssociationTable = AzureDiagnostics \r\n| where OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s;\r\nBackupItemAssociationTable\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ( )\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nBackupItemAssociationTable\r\n};\r\nlet LatestProtectedContainerTable = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| distinct ProtectedContainerUniqueId};\r\nlet ProtectedInstanceUnderAzureDiagnostics = ( )\r\n{\r\nlet ProtectedInstanceTable = AzureDiagnostics \r\n| where OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, ProtectedInstanceCount = toint(ProtectedInstanceCount_s);\r\nProtectedInstanceTable\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = ( )\r\n{\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nProtectedInstanceTable\r\n};\r\nlet TotalProtectedInstanceTable = () \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics()),\r\n(ProtectedInstanceUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId, ProtectedContainerUniqueId};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable | where BackupItemUniqueId == \"\" \r\n| join kind= inner (LatestProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId;\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable | where ProtectedContainerUniqueId == \"\" \r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId;\r\n};\r\nlet LatestProtectedInstanceTable = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n| summarize sum(ProtectedInstanceCount) | extend Dummy = 1};\r\nlet StorageConsumptionUnderAzureDiagnostics = ( )\r\n{\r\nlet StorageConsumptionTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, StorageConsumedInMBs = todouble(StorageConsumedInMBs_s);\r\nStorageConsumptionTable\r\n};\r\nlet StorageConsumptionUnderResourceSpecific = ( )\r\n{\r\nlet StorageConsumptionTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nStorageConsumptionTable\r\n};\r\nlet LatestStorageConsumptionTable = () \r\n{ CombinedTable | union isfuzzy = true \r\n(StorageConsumptionUnderAzureDiagnostics()),\r\n(StorageConsumptionUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| summarize StorageConsumedInGBs = sum(StorageConsumedInMBs)/(1024 * 1024) | extend Dummy = 1};\r\nlet JobUnderAzureDiagnostics = ( )\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where not((JobOperation_s  == \"Backup\" and JobOperationSubType_s == \"Log\") or (JobOperation_s  == \"Backup\" and JobOperationSubType_s == \"Recovery point_Log\"))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, JobUniqueId = JobUniqueId_g;\r\nJobTable\r\n};\r\nlet JobUnderResourceSpecific = ( )\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"));\r\nJobTable\r\n};\r\nlet LatestJobTable = () \r\n{CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()),\r\n(JobUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| summarize dcount(JobUniqueId) | extend Dummy = 1};\r\nlet AlertUnderAzureDiagnostics = ( )\r\n{\r\nlet AlertTable = AzureDiagnostics \r\n| where OperationName == \"Alert\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, AlertUniqueId = AlertUniqueId_g;\r\nAlertTable\r\n};\r\nlet AlertUnderResourceSpecific = ( )\r\n{\r\nlet AlertTable = AddonAzureBackupAlerts \r\n| where OperationName == \"Alert\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nAlertTable\r\n};\r\nlet LatestAlertTable = ()\r\n{ CombinedTable | union isfuzzy = true \r\n(AlertUnderAzureDiagnostics()),\r\n(AlertUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, AlertUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| summarize dcount(AlertUniqueId) | extend Dummy = 1};\r\nLatestJobTable | join (LatestAlertTable) on Dummy == Dummy  | join LatestStorageConsumptionTable on Dummy == Dummy  \r\n| join (LatestProtectedInstanceTable) on Dummy == Dummy  | join (LatestBackupItemTable | count | extend Dummy = 1) on Dummy == Dummy \r\n| extend  Key = pack_array( \"BackupItems\", \"Protected Instances\",  \"Cloud Storage (GB)\", \"Jobs\", \"Alert created\"), Value = pack_array( Count, sum_ProtectedInstanceCount, StorageConsumedInGBs, dcount_JobUniqueId, dcount_AlertUniqueId), \r\nSubTitle = pack_array( \"(last)\", \"(last)\", \"(last)\", \"(sum)\", \"(sum)\")\r\n| project Key, Value, SubTitle \r\n| mvexpand Key, Value, SubTitle",
        "size": 4,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Key",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubTitle",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Value",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        }
      },
      "showPin": true,
      "name": "query - 10"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "661ed0ad-cc20-4c62-b6c1-5668e6e2f692",
            "version": "KqlParameterItem/1.0",
            "name": "P1",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - 10",
      "styleSettings": {
        "padding": "0% 0% 0% 0%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location})  or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = materialize(CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| project BackupItemUniqueId, BMSTypeWithBackupItemType);\r\nlet BackupItemAssociationUnderAzureDiagnostics = ( )\r\n{\r\nlet BackupItemAssociationTable = AzureDiagnostics \r\n| where OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s;\r\nBackupItemAssociationTable\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ( )\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nBackupItemAssociationTable\r\n};\r\nlet LatestProtectedContainerTable = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = ( )\r\n{\r\nlet ProtectedInstanceTable = AzureDiagnostics \r\n| where OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, ProtectedInstanceCount = toint(ProtectedInstanceCount_s);\r\nProtectedInstanceTable\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = ( )\r\n{\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nProtectedInstanceTable\r\n};\r\nlet TotalProtectedInstanceTable = () \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics()),\r\n(ProtectedInstanceUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable | where BackupItemUniqueId == \"\" \r\n| join kind= inner (LatestProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId;\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable | where ProtectedContainerUniqueId == \"\" \r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId;\r\n};\r\nlet LatestProtectedInstanceTable = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n| summarize sum(ProtectedInstanceCount) by BMSTypeWithBackupItemType\r\n};\r\nlet StorageConsumptionUnderAzureDiagnostics = ( )\r\n{\r\nlet StorageConsumptionTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, StorageConsumedInMBs = todouble(StorageConsumedInMBs_s);\r\nStorageConsumptionTable\r\n};\r\nlet StorageConsumptionUnderResourceSpecific = ( )\r\n{\r\nlet StorageConsumptionTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nStorageConsumptionTable\r\n};\r\nlet LatestStorageConsumptionTable = () \r\n{ CombinedTable | union isfuzzy = true \r\n(StorageConsumptionUnderAzureDiagnostics()),\r\n(StorageConsumptionUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| summarize StorageConsumedInGBs = sum(StorageConsumedInMBs)/(1024 * 1024) by BMSTypeWithBackupItemType};\r\nlet JobUnderAzureDiagnostics = ( )\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where not((JobOperation_s == \"Backup\" and JobOperationSubType_s == \"Log\") or (JobOperation_s == \"Backup\" and JobOperationSubType_s == \"Recovery point_Log\"))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, JobUniqueId = JobUniqueId_g, JobStatus = JobStatus_s;\r\nJobTable\r\n};\r\nlet JobUnderResourceSpecific = ( )\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"));\r\nJobTable\r\n};\r\nlet LatestJobTable = () \r\n{CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()),\r\n(JobUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, JobUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n// Calculate percentage\r\n| extend success=iff((JobStatus == \"Completed\" or JobStatus == \"CompletedWithWarnings\") , 1 , 0)\r\n| extend record = 1 // to be used for total row count\r\n| summarize SuccessfulCount =sum(success), TotalCount=sum(record) by BMSTypeWithBackupItemType\r\n| extend JobSuccessPercentage = (SuccessfulCount*100)/todouble(TotalCount)};\r\nlet AlertUnderAzureDiagnostics = ( )\r\n{\r\nlet AlertTable = AzureDiagnostics \r\n| where OperationName == \"Alert\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, AlertUniqueId = AlertUniqueId_g, AlertStatus = AlertStatus_s;\r\nAlertTable\r\n};\r\nlet AlertUnderResourceSpecific = ( )\r\n{\r\nlet AlertTable = AddonAzureBackupAlerts \r\n| where OperationName == \"Alert\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today;\r\nAlertTable\r\n};\r\nlet LatestAlertTable = ()\r\n{ CombinedTable | union isfuzzy = true \r\n(AlertUnderAzureDiagnostics()),\r\n(AlertUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, AlertUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n// Calculate percentage\r\n| extend active=iff(AlertStatus == \"Active\" , 1 , 0)\r\n| extend record = 1 // to be used for total row count\r\n| summarize ActiveCount =sum(active), TotalCount=sum(record) by BMSTypeWithBackupItemType\r\n| extend ActiveAlertPercentage = (ActiveCount*100)/todouble(TotalCount)};\r\nLatestBackupItemTable | summarize dcount(BackupItemUniqueId) by BMSTypeWithBackupItemType | join kind=leftouter LatestJobTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| join kind=leftouter LatestStorageConsumptionTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| join kind=leftouter LatestProtectedInstanceTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| join kind=leftouter LatestAlertTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType\r\n| project-away BMSTypeWithBackupItemType1, BMSTypeWithBackupItemType2, BMSTypeWithBackupItemType3, BMSTypeWithBackupItemType4, TotalCount, TotalCount1, ActiveCount, SuccessfulCount\r\n| order by BMSTypeWithBackupItemType asc",
        "size": 0,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "BMSTypeWithBackupItemType",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "dcount_BackupItemUniqueId",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "JobSuccessPercentage",
              "formatter": 18,
              "formatOptions": {
                "linkTarget": "Url",
                "showIcon": true,
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<",
                    "thresholdValue": "50",
                    "representation": "red",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "<",
                    "thresholdValue": "100",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "100",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": null,
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "StorageConsumedInGBs",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "sum_ProtectedInstanceCount",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ActiveAlertPercentage",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "BMSTypeWithBackupItemType",
              "label": "Backup Item Type"
            },
            {
              "columnId": "dcount_BackupItemUniqueId",
              "label": "Backup Items (last)"
            },
            {
              "columnId": "JobSuccessPercentage",
              "label": "Job Success % (sum)"
            },
            {
              "columnId": "StorageConsumedInGBs",
              "label": "Storage (GB) (last)"
            },
            {
              "columnId": "sum_ProtectedInstanceCount",
              "label": "Protected Instances (last)"
            },
            {
              "columnId": "ActiveAlertPercentage",
              "label": "Active Alerts % (sum)"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "P1",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "customWidth": "70",
      "name": "query - 11",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time Variable Used\r\nlet RangeStartDay = startofday(now(-31d));\r\nlet Today = startofday(now());\r\nlet interval = 1d;\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take last 30 day records\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take last 30 day records\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take last 30 day records\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take last 30 day records\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = materialize(CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| project BackupItemUniqueId, BMSTypeWithBackupItemType);\r\nlet JobUnderAzureDiagnostics = ( )\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take last 30 day records\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today\r\n| where not((JobOperation_s == \"Backup\" and JobOperationSubType_s == \"Log\") or (JobOperation_s == \"Backup\" and JobOperationSubType_s == \"Recovery point_Log\"))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, JobUniqueId = JobUniqueId_g, JobStatus = JobStatus_s;\r\nJobTable\r\n};\r\nlet JobUnderResourceSpecific = ( )\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take last 30 day records\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"));\r\nJobTable\r\n};\r\nlet LatestJobTable = () \r\n{CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()),\r\n(JobUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, JobUniqueId\r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n// Calculate Failure count\r\n| extend Failed=iff((JobStatus != \"Completed\" and JobStatus != \"CompletedWithWarnings\"), 1 , 0)\r\n| extend record = 1 // to be used for total row count\r\n| make-series FailureCountSeries = sum(Failed) default=0\r\non TimeGenerated  from RangeStartDay to Today step interval by BMSTypeWithBackupItemType\r\n};\r\nlet StorageConsumptionUnderAzureDiagnostics = ( )\r\n{\r\nlet StorageConsumptionTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, StorageConsumedInMBs = todouble(StorageConsumedInMBs_s);\r\nStorageConsumptionTable\r\n};\r\nlet StorageConsumptionUnderResourceSpecific = ( )\r\n{\r\nlet StorageConsumptionTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" \r\n// Take records until previous day\r\n| where TimeGenerated >= RangeStartDay and TimeGenerated < Today;\r\nStorageConsumptionTable\r\n};\r\nlet LatestStorageConsumptionTable = () \r\n{ CombinedTable | union isfuzzy = true \r\n(StorageConsumptionUnderAzureDiagnostics()),\r\n(StorageConsumptionUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, startofday(TimeGenerated) \r\n| join kind= inner (LatestBackupItemTable) on BackupItemUniqueId == BackupItemUniqueId\r\n//| summarize StorageConsumedInGBs = sum(StorageConsumedInMBs) by BMSTypeWithBackupItemType\r\n| make-series StorageConsumptionSeries = sum(StorageConsumedInMBs) default=0\r\non TimeGenerated  from RangeStartDay to Today step interval by BMSTypeWithBackupItemType\r\n};\r\nLatestBackupItemTable | summarize dcount(BackupItemUniqueId) by BMSTypeWithBackupItemType | join kind=leftouter LatestJobTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType\r\n| join kind=leftouter LatestStorageConsumptionTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| project BMSTypeWithBackupItemType, FailureCountSeries, StorageConsumptionSeries\r\n| order by BMSTypeWithBackupItemType asc",
        "size": 0,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "BMSTypeWithBackupItemType",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "FailureCountSeries",
              "formatter": 10,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "StorageConsumptionSeries",
              "formatter": 9,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "TimeGenerated",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "BMSTypeWithBackupItemType",
              "label": "Backup Item Type"
            },
            {
              "columnId": "FailureCountSeries",
              "label": "Failed Jobs Trend (last 30 days)"
            },
            {
              "columnId": "StorageConsumptionSeries",
              "label": "Storage Trend (last 30 days)"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "P1",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "customWidth": "30",
      "name": "query - 6",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:center\"><span style=\"font-size:14px;font-weight:600;\">Key Parameters* by BackupItem Type </span> </div>"
      },
      "name": "text - 16"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "cellValue": "{\"01) BackupItem Type\": \"Type of item being backed up, in format BackupManagement Type/BackupItem Type\", \"02) Backup Items\": \"Number of BackupItems associated with the BackupItem Type, as of the end of the selected period\", \"03) Job Success %\": \"% of jobs created in the selected period that succesfully completed\", \"04) Failed Jobs Trend\": \"Number of jobs that failed on each day in the selected period\", \"05) Active Alerts %\": \"% of Alerts created in the given period that are currently active\", \"06) Cloud Storage (GB)\": \"Total Cloud Storage consumed, as of the end of the selected period\", \"07) Cloud Storage Trend\":\"Amount of incremental cloud storage consumed on each day of the selected period\"}",
            "linkTarget": "CellDetails",
            "linkLabel": "â“˜",
            "style": "link",
            "linkIsContextBlade": true
          }
        ]
      },
      "customWidth": "0",
      "name": "links - 15",
      "styleSettings": {
        "margin": "-20px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"ff0ed761-b565-483a-8d93-2032c7531122\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 11\",\"rightTable\":\"query - 6\",\"leftColumn\":\"BMSTypeWithBackupItemType\",\"rightColumn\":\"BMSTypeWithBackupItemType\"}],\"projectRename\":[{\"originalName\":\"[query - 11].BMSTypeWithBackupItemType\",\"mergedName\":\"Backup Item Type\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 11].dcount_BackupItemUniqueId\",\"mergedName\":\"Backup Items (last)\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 11].JobSuccessPercentage\",\"mergedName\":\"Job Success % (sum)\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 6].FailureCountSeries\",\"mergedName\":\"Failed Jobs Trend (last 30 days)\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 11].ActiveAlertPercentage\",\"mergedName\":\"Active Alerts % (sum)\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 11].sum_ProtectedInstanceCount\",\"mergedName\":\"Protected Instances (last)\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 11].StorageConsumedInGBs\",\"mergedName\":\"Storage (GB) (last)\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 6].StorageConsumptionSeries\",\"mergedName\":\"Storage Trend (last 30 days)\",\"fromId\":\"ff0ed761-b565-483a-8d93-2032c7531122\"},{\"originalName\":\"[query - 6].BMSTypeWithBackupItemType\"}]}",
        "size": 3,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 7,
        "resourceType": "microsoft.insights/components",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Backup Item Type",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Backup Items (last)",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "Url",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Job Success % (sum)",
              "formatter": 18,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "showIcon": true,
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<",
                    "thresholdValue": "50",
                    "representation": "red",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "<",
                    "thresholdValue": "100",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "100",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ],
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Azure Backup/Job Distribution",
                  "typeSource": "default",
                  "gallerySource": "static",
                  "gallery": "Azure Monitor"
                }
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Failed Jobs Trend (last 30 days)",
              "formatter": 10,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Active Alerts % (sum)",
              "formatter": 18,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "showIcon": true,
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "50",
                    "representation": "red",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "0",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": null,
                    "text": "{0}{1}"
                  }
                ],
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Azure Backup/Alert Distribution",
                  "typeSource": "default",
                  "gallerySource": "static",
                  "gallery": "Azure Monitor"
                }
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Protected Instances (last)",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Url",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Storage (GB) (last)",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "showIcon": true,
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Azure Backup/Storage",
                  "typeSource": "default",
                  "gallerySource": "static",
                  "gallery": "Azure Monitor"
                }
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 5
                }
              }
            },
            {
              "columnMatch": "Storage Trend (last 30 days)",
              "formatter": 9,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "% of Alerts Active (sum)",
              "formatter": 18,
              "formatOptions": {
                "linkTarget": "Url",
                "showIcon": true,
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "-1",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Backup Item Type1",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "Url",
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Backup Item Type",
              "label": "BackupItem Type",
              "comment": "Backup Item"
            },
            {
              "columnId": "Backup Items (last)",
              "label": "BackupItems"
            },
            {
              "columnId": "Job Success % (sum)",
              "label": "Job Success %"
            },
            {
              "columnId": "Failed Jobs Trend (last 30 days)",
              "label": "Failed Jobs Trend"
            },
            {
              "columnId": "Active Alerts % (sum)",
              "label": "Active Alerts %"
            },
            {
              "columnId": "Protected Instances (last)",
              "label": "Protected Instances"
            },
            {
              "columnId": "Storage (GB) (last)",
              "label": "Cloud Storage (GB)"
            },
            {
              "columnId": "Storage Trend (last 30 days)",
              "label": "Cloud Storage Trend"
            }
          ]
        }
      },
      "customWidth": "100",
      "name": "query - 11",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "<p style=\"font-style:italic\"> *Values for BackupItems and Cloud Storage are as of the end of the selected time period</p>"
      },
      "name": "text - 14"
    }
  ],
  "styleSettings": {},
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}