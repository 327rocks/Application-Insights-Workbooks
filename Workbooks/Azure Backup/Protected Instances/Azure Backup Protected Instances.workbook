{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">Select Log Analytics Workspace </span> <br> <span style=\"font-size:12px;\"><a href=\"#\">How to configure vault diagnostic settings for backup reports </a> </span> </div> <div style=\"text-align:right;float:right\"><span style=\"font-size:12px;\"><a href=\"#\">What happened to the Power BI reports? </a> </span> </div>"
      },
      "name": "text - 12"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "ada751a4-9b4e-4ed0-970d-17381daf41a3",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "description": "Subscriptions to filter the list of workspaces",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false,
              "selectAllValue": ""
            }
          },
          {
            "id": "557fc739-b11e-4917-b74e-34775e66bc86",
            "version": "KqlParameterItem/1.0",
            "name": "Workspaces",
            "type": 5,
            "description": "LA Workspaces configured in vault diagnostic settings",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "50",
      "name": "parameters - 1"
    },
    {
      "type": 1,
      "content": {
        "json": "____________________"
      },
      "name": "text - 9"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">Report Filters </span></div> <div style=\"text-align:right;float:right\"><span style=\"font-size:12px;\"><a href=\"#\">How to use backup reports?</a></span></div>"
      },
      "name": "text - 12"
    },
    {
      "type": 1,
      "content": {
        "json": "<p> ðŸ’¡ <span style=\"font-size:12px; font-style:italic\"> Filters are applied left to right and top to bottom on each page. </span> </p>"
      },
      "name": "text - 13"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "parameters": [
          {
            "id": "8c4ae44c-fa9a-4498-aedc-736a56e64b43",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "value": {
              "durationMs": 604800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "4756b65c-80b2-4477-9bec-626cc713dfd7",
            "version": "KqlParameterItem/1.0",
            "name": "BMSTypeWithBackupItemType",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "// Fetch data from AzureDiagnostics\r\nlet RecordsUnderAzureDiagnostics = ( ) \r\n{\r\nAzureDiagnostics\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\"\r\n| extend  BackupManagementType = BackupManagementType_s, BackupItemType = BackupItemType_s \r\n};\r\n// Fetch data from ResourceSpecific\r\nlet RecordsUnderResourceSpecific = ( ) \r\n{\r\nCoreAzureBackup\r\n| where OperationName == \"BackupItem\"\r\n};\r\nCombinedTable | union isfuzzy = true \r\n(RecordsUnderAzureDiagnostics()),\r\n(RecordsUnderResourceSpecific())\r\n| distinct BackupManagementType, BackupItemType\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType) \r\n| distinct BMSTypeWithBackupItemType",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "BackupItem Type"
          },
          {
            "id": "2a83acc5-2123-476f-8a4c-da2fddf231a1",
            "version": "KqlParameterItem/1.0",
            "name": "Location",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = VaultName_s, AzureDataCenter = AzureDataCenter_s\r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| distinct AzureDataCenter};\r\nLatestBackupItemTable",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "fefd31fa-2774-43ca-8cc3-44d477c969f0",
            "version": "KqlParameterItem/1.0",
            "name": "Vault",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "// Parameter Used -  BMSTypeWithBackupItemType, Location\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n// Filter by Parameter\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| extend VaultName = VaultName_s, AzureDataCenter = AzureDataCenter_s\r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n// Filter by Parameter\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId, VaultName, AzureDataCenter;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| distinct VaultName};\r\nLatestBackupItemTable",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 7"
    },
    {
      "type": 1,
      "content": {
        "json": "â“˜ <span style=\"font-size:12px;font-style:italic\"> All datetimes are in UTC. Data for the current partial day is not shown in the reports.</span></div>"
      },
      "name": "text - 14"
    },
    {
      "type": 1,
      "content": {
        "json": "__________________"
      },
      "name": "text - 11"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Summary",
            "subTarget": "{BackupManagementType}",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Summary",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
            "linkTarget": "step",
            "linkLabel": "Protected Instances",
            "style": "primary"
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Storage",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Storage",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Job Distribution",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Job Distribution",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Job Details",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Job Details",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Alert Distribution",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Alert Distribution",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Alert Details",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Alert Details",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          }
        ]
      },
      "customWidth": "100",
      "name": "links - 8"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s, BackupItemProtectionState = BackupItemProtectionState_s\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n};\r\nLatestBackupItemTable\r\n| summarize count(BackupItemUniqueId) by BackupItemProtectionState",
        "size": 4,
        "exportFieldName": "BackupItemProtectionState",
        "exportParameterName": "BackupItemProtectionState",
        "exportDefaultValue": "*",
        "exportToExcelOptions": "visible",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "BackupItemProtectionState",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubTitle",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "count_BackupItemUniqueId",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            }
          },
          "showBorder": true
        }
      },
      "name": "query - 10",
      "styleSettings": {
        "margin": "0% 0% 0% 0%",
        "padding": "0% 0% 0% 0%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:center\"><span style=\"font-size:14px;font-weight:600;\">Protected Instances and Storage by Billing Entity </span> </div>"
      },
      "name": "text - 16"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "cellValue": "{\"01: Billing Entity Name\": \"Name of the Billing Entity\", \"Billing Entity Type\": \"Whether the Billing Entity is a ProtectedContainer or Backup Item\",\"Backup Management Type\": \"Backup Management Type associated with the Billing Entity\",\"# Protected Instances\": \"Number of Protected Instances associated with the Billing Entity\"}",
            "linkTarget": "CellDetails",
            "linkLabel": "â“˜",
            "style": "link",
            "linkIsContextBlade": true
          },
          {
            "cellValue": "SelectedBillingEntityName",
            "linkTarget": "parameter",
            "linkLabel": "â†»",
            "subTarget": "*",
            "style": "link",
            "linkIsContextBlade": true
          }
        ]
      },
      "customWidth": "0",
      "name": "links - 15",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "parameters": [
          {
            "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
            "version": "KqlParameterItem/1.0",
            "name": "BillingEntityName",
            "label": "Search Billing Entity Name",
            "type": 1,
            "value": "",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "5dc2a074-b510-44f2-9530-cfcbd159b59c",
            "version": "KqlParameterItem/1.0",
            "name": "BillingMetricSortBy",
            "label": "Sort By:",
            "type": 2,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{ \"value\": \"FailureCount\", \"label\": \"FailureCount\" },\r\n{ \"value\": \"AvgJobDuration\", \"label\": \"AvgJobDuration\" }, \r\n{ \"value\": \"SuccessPercent\", \"label\": \"SuccessPercent\" },{ \"value\": \"AvgDataTransferred\", \"label\": \"AvgDataTransferred\", \"selected\":true }]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "df3cc03c-53f7-4523-a29b-e50bf1b6d922",
            "version": "KqlParameterItem/1.0",
            "name": "BillingMetricOrder",
            "label": "Order:",
            "type": 2,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{ \"value\": \"asc\", \"label\": \"Ascending\" },{ \"value\": \"desc\", \"label\": \"Descending\", \"selected\":true }]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "f4433681-963d-4204-867c-c54c6c89d3f8",
            "version": "KqlParameterItem/1.0",
            "name": "ProtectedInstanceMetricPageNumber",
            "type": 2,
            "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s, BackupItemName = BackupItemName_s, BackupItemProtectionState = BackupItemProtectionState_s\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| project BackupItemUniqueId, BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ( )\r\n{\r\nlet BackupItemAssociationTable = AzureDiagnostics\r\n| where OperationName == \"ProtectedContainer\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| distinct ProtectedContainerName_s, ProtectedContainerUniqueId_s\r\n| join kind= rightouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n) on ProtectedContainerUniqueId_s == ProtectedContainerUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, BackupManagementServerUniqueId = BackupManagementServerUniqueId_s, ProtectedContainerName = ProtectedContainerName_s, \r\nPolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\") , PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), BackupItemFrontEndSize = todouble(BackupItemFrontEndSize_s1), \r\nStorageConsumedInMB = todouble(StorageConsumedInMBs_s2), StorageAllocatedInMB = todouble(StorageAllocatedInMBs_s2)\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid);\r\nBackupItemAssociationTable\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ( )\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| distinct ProtectedContainerName, ProtectedContainerUniqueId\r\n| join kind= rightouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= fullouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\nAddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s\r\n) on BackupItemUniqueId == BackupItemUniqueId ;\r\nBackupItemAssociationTable\r\n};\r\nlet LatestBackupItemAssociationTable = materialize(\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| join kind= inner (LatestBackupItemDimensionTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestBackupItemInfoTable = materialize(\r\nLatestBackupItemAssociationTable | distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, BMSTypeWithBackupItemType, PolicyUniqueId, ProtectedContainerUniqueId, ProtectedContainerName, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestProtectedContainerTable = ( ) \r\n{\r\nLatestBackupItemAssociationTable | distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, ProtectedContainerName | where ProtectedContainerUniqueId != \"\"\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AzureDiagnostics \r\n| where OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where (BackupItemUniqueId_s == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId_s == \"\" and not(isProtectedContainerBillingType))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, ProtectedInstanceCount = toint(ProtectedInstanceCount_s), BackupManagementType = BackupManagementType_s;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet TotalProtectedInstanceTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics(isProtectedContainerBillingType)),\r\n(ProtectedInstanceUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType\r\n};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(true) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| extend BillingEntityType = \"ProtectedContainer\", BillingEntityName = ProtectedContainerName, BillingEntityUniqueId = ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(false) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName, BillingEntityUniqueId = BackupItemUniqueId;\r\n};\r\nlet ProtectedInstanceMetric = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| where BillingEntityName contains (@\"{BillingEntityName}\") or '*' in ('{BillingEntityName}')\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMB) by BillingEntityUniqueId, BillingEntityName, BillingEntityType, BackupManagementType, ProtectedInstanceCount\r\n};\r\nProtectedInstanceMetric\r\n| sort by ProtectedInstanceCount desc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| distinct page_num",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "Page:"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "70",
      "name": "parameters - 7",
      "styleSettings": {
        "margin": "-23px 0% 0% 0%",
        "padding": "0% 0% 0% 0%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s, BackupItemName = BackupItemName_s, BackupItemProtectionState = BackupItemProtectionState_s\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| project BackupItemUniqueId, BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ( )\r\n{\r\nlet BackupItemAssociationTable = AzureDiagnostics\r\n| where OperationName == \"ProtectedContainer\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| distinct ProtectedContainerName_s, ProtectedContainerUniqueId_s\r\n| join kind= rightouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n) on ProtectedContainerUniqueId_s == ProtectedContainerUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, BackupManagementServerUniqueId = BackupManagementServerUniqueId_s, ProtectedContainerName = ProtectedContainerName_s, \r\nPolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\") , PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), BackupItemFrontEndSize = todouble(BackupItemFrontEndSize_s1), \r\nStorageConsumedInMB = todouble(StorageConsumedInMBs_s2), StorageAllocatedInMB = todouble(StorageAllocatedInMBs_s2)\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid);\r\nBackupItemAssociationTable\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ( )\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| distinct ProtectedContainerName, ProtectedContainerUniqueId\r\n| join kind= rightouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= fullouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\nAddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s\r\n) on BackupItemUniqueId == BackupItemUniqueId ;\r\nBackupItemAssociationTable\r\n};\r\nlet LatestBackupItemAssociationTable = materialize(\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| join kind= inner (LatestBackupItemDimensionTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestBackupItemInfoTable = materialize(\r\nLatestBackupItemAssociationTable | distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, BMSTypeWithBackupItemType, PolicyUniqueId, ProtectedContainerUniqueId, ProtectedContainerName, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestProtectedContainerTable = ( ) \r\n{\r\nLatestBackupItemAssociationTable | distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, ProtectedContainerName | where ProtectedContainerUniqueId != \"\"\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AzureDiagnostics \r\n| where OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where (BackupItemUniqueId_s == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId_s == \"\" and not(isProtectedContainerBillingType))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, ProtectedInstanceCount = toint(ProtectedInstanceCount_s), BackupManagementType = BackupManagementType_s;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" \r\n// Take records until previous day\r\n| extend TimeRangeEnd = TimeGenerated\r\n| where TimeRangeEnd < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet TotalProtectedInstanceTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics(isProtectedContainerBillingType)),\r\n(ProtectedInstanceUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType\r\n};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(true) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| extend BillingEntityType = \"ProtectedContainer\", BillingEntityName = ProtectedContainerName, BillingEntityUniqueId = ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(false) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName, BillingEntityUniqueId = BackupItemUniqueId;\r\n};\r\nlet ProtectedInstanceMetric = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| where BillingEntityName contains (@\"{BillingEntityName}\") or '*' in ('{BillingEntityName}')\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMB) by BillingEntityUniqueId, BillingEntityName, BillingEntityType, BackupManagementType, ProtectedInstanceCount\r\n| project-away BillingEntityUniqueId\r\n};\r\nProtectedInstanceMetric\r\n| sort by ProtectedInstanceCount desc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| where page_num has ('{ProtectedInstanceMetricPageNumber}') or '*' in ('{ProtectedInstanceMetricPageNumber}')\r\n",
        "size": 0,
        "exportFieldName": "BillingEntityName",
        "exportParameterName": "SelectedBillingEntityName",
        "exportDefaultValue": "*",
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "BillingEntityName",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "BillingEntityType",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "BackupManagementType",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ProtectedInstanceCount",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "sum_BackupItemFrontEndSize",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 4
                }
              }
            },
            {
              "columnMatch": "sum_StorageConsumedInMB",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "BillingEntityName",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "BillingEntityName",
              "label": "Billing Entity Name"
            },
            {
              "columnId": "BillingEntityType",
              "label": "Billing Entity Type"
            },
            {
              "columnId": "BackupManagementType",
              "label": "Backup Management Type"
            },
            {
              "columnId": "ProtectedInstanceCount",
              "label": "# Protected Instances"
            },
            {
              "columnId": "sum_BackupItemFrontEndSize",
              "label": "Front End Storage (GB)"
            },
            {
              "columnId": "sum_StorageConsumedInMB",
              "label": "Cloud Storage (GB)"
            },
            {
              "columnId": "row_num"
            },
            {
              "columnId": "page_num"
            }
          ]
        }
      },
      "showPin": true,
      "name": "query - 11",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "padding": "0% 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s, BackupItemName = BackupItemName_s, BackupItemProtectionState = BackupItemProtectionState_s\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| project BackupItemUniqueId, BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ( )\r\n{\r\nlet BackupItemAssociationTable = AzureDiagnostics\r\n| where OperationName == \"ProtectedContainer\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| distinct ProtectedContainerName_s, ProtectedContainerUniqueId_s\r\n| join kind= rightouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on ProtectedContainerUniqueId_s == ProtectedContainerUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, BackupManagementServerUniqueId = BackupManagementServerUniqueId_s, ProtectedContainerName = ProtectedContainerName_s, \r\nPolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\") , PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), BackupItemFrontEndSize = todouble(BackupItemFrontEndSize_s1), \r\nStorageConsumedInMB = todouble(StorageConsumedInMBs_s2), StorageAllocatedInMB = todouble(StorageAllocatedInMBs_s2)\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid);\r\nBackupItemAssociationTable\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ( )\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| distinct ProtectedContainerName, ProtectedContainerUniqueId\r\n| join kind= rightouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= fullouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\nAddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId ;\r\nBackupItemAssociationTable\r\n};\r\nlet LatestBackupItemAssociationTable = materialize(\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n| join kind= inner (LatestBackupItemDimensionTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestBackupItemInfoTable = materialize(\r\nLatestBackupItemAssociationTable | distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, BMSTypeWithBackupItemType, PolicyUniqueId, ProtectedContainerUniqueId, ProtectedContainerName, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestProtectedContainerTable = ( ) \r\n{\r\nLatestBackupItemAssociationTable | distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, ProtectedContainerName | where ProtectedContainerUniqueId != \"\"\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AzureDiagnostics \r\n| where OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId_s == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId_s == \"\" and not(isProtectedContainerBillingType))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, ProtectedInstanceCount = toint(ProtectedInstanceCount_s), BackupManagementType = BackupManagementType_s;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet TotalProtectedInstanceTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics(isProtectedContainerBillingType)),\r\n(ProtectedInstanceUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType, TimeRangeEndDay\r\n};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(true) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| extend BillingEntityType = \"ProtectedContainer\", BillingEntityName = ProtectedContainerName, BillingEntityUniqueId = ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(false) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName, BillingEntityUniqueId = BackupItemUniqueId;\r\n};\r\nlet ProtectedInstanceMetric = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| where BillingEntityName contains (@\"{SelectedBillingEntityName}\") or '*' in ('{SelectedBillingEntityName}')\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMB) by BillingEntityUniqueId, BillingEntityName, BillingEntityType, BackupManagementType, ProtectedInstanceCount, TimeRangeEndDay\r\n| project-away BillingEntityUniqueId\r\n};\r\nProtectedInstanceMetric\r\n| summarize sum(ProtectedInstanceCount) by  TimeRangeEndDay",
        "size": 0,
        "aggregation": 5,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "title": "Protected Instances Trend",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "visualization": "linechart"
      },
      "customWidth": "33",
      "showPin": true,
      "name": "query - 10"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s, BackupItemName = BackupItemName_s, BackupItemProtectionState = BackupItemProtectionState_s\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| project BackupItemUniqueId, BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ( )\r\n{\r\nlet BackupItemAssociationTable = AzureDiagnostics\r\n| where OperationName == \"ProtectedContainer\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| distinct ProtectedContainerName_s, ProtectedContainerUniqueId_s\r\n| join kind= rightouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on ProtectedContainerUniqueId_s == ProtectedContainerUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, BackupManagementServerUniqueId = BackupManagementServerUniqueId_s, ProtectedContainerName = ProtectedContainerName_s, \r\nPolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\") , PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), BackupItemFrontEndSize = todouble(BackupItemFrontEndSize_s1), \r\nStorageConsumedInMB = todouble(StorageConsumedInMBs_s2), StorageAllocatedInMB = todouble(StorageAllocatedInMBs_s2)\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid);\r\nBackupItemAssociationTable\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ( )\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| distinct ProtectedContainerName, ProtectedContainerUniqueId\r\n| join kind= rightouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= fullouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\nAddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId ;\r\nBackupItemAssociationTable\r\n};\r\nlet LatestBackupItemAssociationTable = materialize(\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n| join kind= inner (LatestBackupItemDimensionTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestBackupItemInfoTable = materialize(\r\nLatestBackupItemAssociationTable | distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, BMSTypeWithBackupItemType, PolicyUniqueId, ProtectedContainerUniqueId, ProtectedContainerName, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestProtectedContainerTable = ( ) \r\n{\r\nLatestBackupItemAssociationTable | distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, ProtectedContainerName | where ProtectedContainerUniqueId != \"\"\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AzureDiagnostics \r\n| where OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId_s == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId_s == \"\" and not(isProtectedContainerBillingType))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, ProtectedInstanceCount = toint(ProtectedInstanceCount_s), BackupManagementType = BackupManagementType_s;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet TotalProtectedInstanceTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics(isProtectedContainerBillingType)),\r\n(ProtectedInstanceUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType, TimeRangeEndDay\r\n};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(true) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| extend BillingEntityType = \"ProtectedContainer\", BillingEntityName = ProtectedContainerName, BillingEntityUniqueId = ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(false) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName, BillingEntityUniqueId = BackupItemUniqueId;\r\n};\r\nlet ProtectedInstanceMetric = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| where BillingEntityName contains (@\"{SelectedBillingEntityName}\") or '*' in ('{SelectedBillingEntityName}')\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMB) by BillingEntityUniqueId, BillingEntityName, BillingEntityType, BackupManagementType, ProtectedInstanceCount, TimeRangeEndDay\r\n| project-away BillingEntityUniqueId\r\n};\r\nProtectedInstanceMetric\r\n| summarize sum(sum_BackupItemFrontEndSize) by  TimeRangeEndDay",
        "size": 0,
        "aggregation": 5,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "title": "Frontend Storage Trend",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "visualization": "linechart",
        "gridSettings": {
          "sortBy": [
            {
              "itemKey": "JobOperation",
              "sortOrder": 1
            }
          ],
          "labelSettings": []
        },
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "JobStatus",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_JobStatus",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "JobStatus",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_JobStatus",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "customWidth": "33",
      "showPin": true,
      "name": "query - 8"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemsUnderAzureDiagnostics = ( ) \r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType_s, \"/\", BackupItemType_s), BackupItemUniqueId = BackupItemUniqueId_s, BackupItemName = BackupItemName_s, BackupItemProtectionState = BackupItemProtectionState_s\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemsUnderResourceSpecific = ( ) \r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n;\r\nlet BackupItemsInSelectedVault = VaultTable | join kind= inner (\r\nBackupItemTable \r\n) on ResourceId == ResourceId;\r\nBackupItemsInSelectedVault\r\n};\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemsUnderAzureDiagnostics()),\r\n(BackupItemsUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId\r\n| project BackupItemUniqueId, BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ( )\r\n{\r\nlet BackupItemAssociationTable = AzureDiagnostics\r\n| where OperationName == \"ProtectedContainer\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| distinct ProtectedContainerName_s, ProtectedContainerUniqueId_s\r\n| join kind= rightouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on ProtectedContainerUniqueId_s == ProtectedContainerUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| join kind= fullouter (\r\nAzureDiagnostics \r\n| where OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId_s, TimeRangeEndDay\r\n) on BackupItemUniqueId_s == BackupItemUniqueId_s \r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, BackupManagementServerUniqueId = BackupManagementServerUniqueId_s, ProtectedContainerName = ProtectedContainerName_s, \r\nPolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\") , PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), BackupItemFrontEndSize = todouble(BackupItemFrontEndSize_s1), \r\nStorageConsumedInMB = todouble(StorageConsumedInMBs_s2), StorageAllocatedInMB = todouble(StorageAllocatedInMBs_s2)\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid);\r\nBackupItemAssociationTable\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ( )\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| distinct ProtectedContainerName, ProtectedContainerUniqueId\r\n| join kind= rightouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= fullouter (\r\nCoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\nAddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId ;\r\nBackupItemAssociationTable\r\n};\r\nlet LatestBackupItemAssociationTable = materialize(\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by  BackupItemUniqueId, TimeRangeEndDay\r\n| join kind= inner (LatestBackupItemDimensionTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestBackupItemInfoTable = materialize(\r\nLatestBackupItemAssociationTable | distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, BMSTypeWithBackupItemType, PolicyUniqueId, ProtectedContainerUniqueId, ProtectedContainerName, BackupItemFrontEndSize, StorageConsumedInMB, StorageAllocatedInMB, BackupItemProtectionState\r\n);\r\nlet LatestProtectedContainerTable = ( ) \r\n{\r\nLatestBackupItemAssociationTable | distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, ProtectedContainerName | where ProtectedContainerUniqueId != \"\"\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| where VaultName_s in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter_s in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AzureDiagnostics \r\n| where OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId_s == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId_s == \"\" and not(isProtectedContainerBillingType))\r\n| extend BackupItemUniqueId = BackupItemUniqueId_s, ProtectedContainerUniqueId = ProtectedContainerUniqueId_s, ProtectedInstanceCount = toint(ProtectedInstanceCount_s), BackupManagementType = BackupManagementType_s;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet VaultTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| project ResourceId;\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName;\r\nlet ProtectedInstanceInSelectedVault = VaultTable | join kind= inner (\r\nProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\nProtectedInstanceInSelectedVault\r\n};\r\nlet TotalProtectedInstanceTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics(isProtectedContainerBillingType)),\r\n(ProtectedInstanceUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType, TimeRangeEndDay\r\n};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(true) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| extend BillingEntityType = \"ProtectedContainer\", BillingEntityName = ProtectedContainerName, BillingEntityUniqueId = ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceTable(false) \r\n| join kind= leftouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName, BillingEntityUniqueId = BackupItemUniqueId;\r\n};\r\nlet ProtectedInstanceMetric = ( ) \r\n{ CombinedTable | union isfuzzy = true \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| where BillingEntityName contains (@\"{SelectedBillingEntityName}\") or '*' in ('{SelectedBillingEntityName}')\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMB) by BillingEntityUniqueId, BillingEntityName, BillingEntityType, BackupManagementType, ProtectedInstanceCount, TimeRangeEndDay\r\n| project-away BillingEntityUniqueId\r\n};\r\nProtectedInstanceMetric\r\n| summarize sum(sum_StorageConsumedInMB) by  TimeRangeEndDay",
        "size": 0,
        "aggregation": 5,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "title": "Cloud Storage Trend",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "visualization": "linechart"
      },
      "customWidth": "33",
      "showPin": true,
      "name": "query - 9"
    }
  ],
  "styleSettings": {},
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}